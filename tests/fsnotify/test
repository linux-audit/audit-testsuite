#!/usr/bin/perl

use strict;

use Test;
BEGIN { plan tests => 3 }

use File::Temp qw/ tempdir tempfile /;

###
# functions

sub key_gen {
    my @chars = ( "A" .. "Z", "a" .. "z" );
    my $key   = "testsuite-" . time . "-";
    $key .= $chars[ rand @chars ] for 1 .. 8;
    return $key;
}

###
# setup

# reset audit
system("auditctl -D >& /dev/null");

# create temp directory
my $dir = tempdir( TEMPLATE => '/tmp/audit-testsuite-XXXX', CLEANUP => 1 );

# create stdout/stderr sinks
( my $fh_out, my $stdout ) = tempfile(
    TEMPLATE => '/tmp/audit-testsuite-out-XXXX',
    UNLINK   => 1
);
( my $fh_err, my $stderr ) = tempfile(
    TEMPLATE => '/tmp/audit-testsuite-err-XXXX',
    UNLINK   => 1
);

###
# tests

# create a new file into the temp directory
( my $fh, my $filename ) =
  tempfile( TEMPLATE => $dir . "/file-XXXX", UNLINK => 1 );

# set the file watch
my $key = key_gen();
system("auditctl -a always,exit -F exe=$filename -S all -k $key");

# delete the directory to trigger a fsnotify event
system("rm -Rf $dir");

# make sure the records had a chance to bubble through to the logs
system("auditctl -m syncmarker-$key");
for ( my $i = 0 ; $i < 10 ; $i++ ) {
    if ( system("ausearch -m USER | grep -q syncmarker-$key") eq 0 ) {
        last;
    }
    sleep(0.2);
}

# test if we generate any audit records from the watch
my $result = system("ausearch -i -k $key > $stdout 2> $stderr");
ok( $result, 0 );

system("ausearch -i -m CONFIG_CHANGE > $stdout 2> $stderr");
my $line;
my $found_add_rule        = 0;
my $found_autoremove_rule = 0;
while ( $line = <$fh_out> ) {

    # test if CONFIG_CHANGE add_rule and autoremove_rule records
    # were generated
    if ( $line =~ /^type=CONFIG_CHANGE / ) {
        if ( $line =~ / op=add_rule / ) {
            $found_add_rule = 1;
        }

        if ( $line =~ / op=autoremove_rule / ) {
            $found_autoremove_rule = 1;
        }
    }
}
ok($found_add_rule);
ok($found_autoremove_rule);

###
# cleanup
system("auditctl -D >& /dev/null");
