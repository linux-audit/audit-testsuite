#!/usr/bin/perl

use strict;

use Test;
BEGIN { plan tests => 5 }

use File::Temp qw/ tempfile /;

###
# functions

sub key_gen {
    my @chars = ( "A" .. "Z", "a" .. "z" );
    my $key = "testsuite-" . time . "-";
    $key .= $chars[ rand @chars ] for 1 .. 8;
    return $key;
}

###
# setup

# try to find two test executables
my ( $exec, $exec2 );

if ( -x "/usr/bin/id" ) {
    $exec = "/usr/bin/id";
}
elsif ( -x "/bin/id" ) {
    $exec = "/bin/id";
}

if ( -x "/usr/bin/echo" ) {
    $exec2 = "/usr/bin/echo";
}
elsif ( -x "/bin/echo" ) {
    $exec2 = "/bin/echo";
}

# see if we found the test executables
ok( $exec ne "" and $exec2 ne "" );

# create stdout/stderr sinks
( my $fh_out, my $stdout ) = tempfile(
    TEMPLATE => '/tmp/audit-testsuite-out-XXXX',
    UNLINK   => 1
);
( my $fh_err, my $stderr ) = tempfile(
    TEMPLATE => '/tmp/audit-testsuite-err-XXXX',
    UNLINK   => 1
);

sub do_test {
    my $rule = shift(@_);

    # reset audit
    system("auditctl -D >& /dev/null");

    # set the audit-by-executable filter
    my $key = key_gen();
    system(
"auditctl -a always,exit -F $rule -F arch=b$ENV{MODE} -S exit_group -k $key"
    );

    # run the watched executable
    system("$exec > /dev/null 2> /dev/null");

    # run a different executable
    system("$exec2 > /dev/null 2> /dev/null");

    # test if we generate any audit records from the filter rule
    my $result = system("ausearch -i -k $key > $stdout 2> $stderr");
    ok( $result, 0 );

    # test if we generate the SYSCALL record correctly
    my $line;
    my $found_exec  = 0;
    my $found_exec2 = 0;
    seek( $fh_out, 0, 0 );
    seek( $fh_err, 0, 0 );
    while ( $line = <$fh_out> ) {

        # test if we generate a SYSCALL record
        if ( $line =~ /^type=SYSCALL / ) {
            if ( $line =~ / exe=$exec / ) {
                $found_exec = 1;
            }
            elsif ( $line =~ / exe=$exec2 / ) {
                $found_exec2 = 1;
            }
        }
    }
    ok( $found_exec and not $found_exec2 );
}

do_test("exe=$exec");
do_test("exe!=$exec2");

###
# cleanup

system("auditctl -D >& /dev/null");

